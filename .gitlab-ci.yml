# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:

image: docker:20.10.5-dind
stages:          # List of stages for jobs, and their order of execution
  - pre
  - build-static
  - build-agolia
  - build-image
  - deploy

pre:
  stage: pre
  tags:
   - blog   
  image: bitnami/git:latest    
  script:
    - git clone https://github.com/zhaohuabing/hugo-theme-cleanwhite.git themes/hugo-theme-cleanwhite --depth=1
  artifacts:
    expire_in: 1 hour
    paths:
      - themes

build-static:
  stage: build-static
  tags:
    - blog
  dependencies:
    - pre
  image: "${CI_TEMPLATE_REGISTRY_HOST}/pages/hugo:latest"
  script:
    - hugo
    - ls
    - ls themes
  artifacts:
    expire_in: 1 hour
    paths:
      - public
  rules:
   - if: $CI_COMMIT_MESSAGE =~ /draft/
     when: never
   - when: always


build-agolia:
  stage: build-agolia
  tags:
   - blog 
  dependencies:
    - build-static
  image: node:alpine
  script: 
    - export ALGOLIA_APP_ID=$ALGOLIA_APP_ID 
    - export ALGOLIA_ADMIN_KEY=$ALGOLIA_ADMIN_KEY 
    - export ALGOLIA_INDEX_NAME=$ALGOLIA_INDEX_NAME 
    - export ALGOLIA_INDEX_FILE=$ALGOLIA_INDEX_FILE 
    - npm install
    - npm run algolia
  rules:
   - if: $CI_COMMIT_MESSAGE =~ /draft/
     when: never
   - when: always

build-image:
  stage: build-image
  tags:
    - blog
  dependencies:
    - build-static
    - build-agolia
  before_script:
    - docker login -u 515298386@qq.com -p "$ALI_DOCKER_PWD" registry.cn-hangzhou.aliyuncs.com
  script:
    - docker build -t registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:$CI_COMMIT_SHORT_SHA .
    - docker tag registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:$CI_COMMIT_SHORT_SHA registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:latest
    - docker push registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:latest
    - docker push registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:$CI_COMMIT_SHORT_SHA
    - docker rmi registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:latest registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:$CI_COMMIT_SHORT_SHA
  rules:
   - if: $CI_COMMIT_MESSAGE =~ /draft/
     when: never
   - when: always

deploy:
  stage: deploy
  tags:
    - blog
  before_script:
    - docker login -u 515298386@qq.com -p "$ALI_DOCKER_PWD" registry.cn-hangzhou.aliyuncs.com
    - docker rm gemini-blog -f || true
    - echo ${HOME}
  script: >
   docker run -d -p 80:80 -p 443:443 -p 443:443/udp
   -v ${HOME}/gemini/blog/caddy_data:/data
   -v ${HOME}/gemini/blog/caddy_config:/config
   --name gemini-blog registry.cn-hangzhou.aliyuncs.com/hecvstyle/gemini-blog:latest
    caddy file-server --domain geminihub.top

  rules:
   - if: $CI_COMMIT_MESSAGE =~ /draft/
     when: never
   - when: always
