# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages:          # List of stages for jobs, and their order of execution
  - build
  - deploy

build-static:
  stage: build
  tags:
    - blog
    - deploy
  script:
    - git clone https://github.com/zhaohuabing/hugo-theme-cleanwhite.git themes/hugo-theme-cleanwhite --depth=1
    - docker run --rm -v $(pwd):/src klakegg/hugo
    - ls -l
  artifacts:
    expire_in: 1 day
    paths:
      - public
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /draft/
      when: never
    - when: always

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  before_script:
    - ls -l
  script: >
    docker run --rm 
    -e NPM_CONFIG_LOGLEVEL=info 
    -e ALGOLIA_APP_ID=ZYGEKKTQXZ 
    -e ALGOLIA_ADMIN_KEY=b88872883624f60c82f5507097a946ab 
    -e ALGOLIA_INDEX_NAME=blog-search-datas 
    -e ALGOLIA_INDEX_FILE=./public/algolia.json 
    -v $(pwd):/gemini 
    node  sh -c 'cd gemini&&npm install && npm run algolia'

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
